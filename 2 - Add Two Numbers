/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        return addTwoRecursive(l1,l2);
    }
    
    ListNode* addTwoRecursive(ListNode* l1,ListNode*l2,int remainder=0){
        ListNode* node;
        if(l1==NULL&&l2==NULL){
            if(remainder){
                node = new ListNode(remainder);
                return node;
            }
            return NULL;
        }
        else if(l1!=NULL&&l2==NULL){
            int value = l1->val + remainder;
            node = new ListNode(value%10);
            node->next = addTwoRecursive(l1->next,NULL,value/10);
            return node;
        }
        else if(l1==NULL&&l2!=NULL){
            int value = l2->val + remainder;
            node = new ListNode(value%10);
            node->next = addTwoRecursive(NULL,l2->next,value/10);
            return node;
        }
        else{
            int val = l1->val + l2->val + remainder;
            node = new ListNode(val%10);
            node->next = addTwoRecursive(l1->next,l2->next,val/10);
            return node;
        }
    }
    
};
