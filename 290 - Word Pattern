class Solution {
public:
    bool wordPattern(string pattern, string str) {
        istringstream iss(str);
        string word;
        vector<string> words;
        map<string,char> s2c;
        map<char,string> c2s;
        
        while(iss >> word){
            words.push_back(word);
        }
        
        if(pattern.size()!=words.size()){
            return false;
        }
        
        for(int i=0;i<words.size();i++){
            // Add a new entry  if it doesn't exist
            if(s2c.count(words[i])==0 && c2s.count(pattern[i])==0){
                s2c[words[i]] = pattern[i];
                c2s[pattern[i]]=words[i];
            }
            else if(s2c[words[i]]!=pattern[i]){
                return false;
            }
        }
        return true;
    }
};
